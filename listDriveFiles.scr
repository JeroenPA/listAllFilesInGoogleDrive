function getFileInfoOfFolder(folderID, depth = 0)
{
  const fileDesignation = "file";
  const folderDesignation = "folder";


  var fileInfo=[];

  var folderName = DriveApp.getFolderById(folderID).getName();
  var currentFile, files = DriveApp.getFolderById(folderID).getFiles();
  while(files.hasNext()){
    currentFile = files.next();
    fileInfo.push([currentFile.getId(), currentFile.getName(), folderName, fileDesignation, depth])
  }

  var currentFolder, childFolders = DriveApp.getFolderById(folderID).getFolders(), childFileInfo;
  while(childFolders.hasNext()){
    currentFolder = childFolders.next();
    fileInfo.push([currentFolder.getId(), currentFolder.getName(),folderName, folderDesignation, depth])
    childFileInfo = getFileInfoOfFolder(currentFolder.getId(),depth+1);
    if(childFileInfo!=null){
      fileInfo = fileInfo.concat(childFileInfo);
      }
  }

  return (fileInfo.length>0?fileInfo:null);

}

function getFileNames()
{
  const sheetName = "GetFileIDs"
  var ss = SpreadsheetApp.getActiveSpreadsheet();

  var foldersIterator = DriveApp.getFileById(ss.getId()).getParents();
  if(!foldersIterator.hasNext()) return false;
  var folderID = foldersIterator.next().getId();

  //get the filenames
  var fileInfo = getFileInfoOfFolder(folderID);

  if(fileInfo.length===0){
    return false
  }

  //get the sheet object
  var sheet = ss.getSheetByName(sheetName);
  if (sheet==null){

    sheet = ss.insertSheet();
    sheet.setName(sheetName)

  }

  sheet.clear();
  sheet.getRange(1,1,fileInfo.length, fileInfo[0].length).setValues(fileInfo);

}
